import os

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')

import django

django.setup()

from exam_element.models import Account,ClassRoom,Question,StudentAnswer,Exam
import random
from faker import Faker

def seed_exam (n):
    fake = Faker()
    for _ in range(n):
        name = fake.name()
        Exam.objects.create(
            name = name,
            account = Account.objects.get(id = random.randint(11 , 500)),
            classroom = ClassRoom.objects.get(id = random.randint(11 , 50)),
        )
    print(f"successfully {n} Exams")


def seed_question (n):
    fake = Faker()
    for _ in range(n):
        
        model_answer = fake.text()
        question = fake.text()

        Question.objects.create(
            model_answer = model_answer,
            question = question,
            exam = Exam.objects.get(id = random.randint(11,20)),

             
        )
    print(f"successfully {n} questions")

def seed_classroom(n):
    fake = Faker()
    for _ in range(n):
        name = fake.name()
        ClassRoom.objects.create(
            name = name,
            teacher = Account.objects.get(id=random.randint(11,500)),

        )
    print(f"successfully {n} rooms")


def seed_account(n):
    fake = Faker()
    type_option = ['Teacher','Student']
    for _ in range(n):
        user = fake.name()
        account_type = type_option[random.randint(0,1)]
        Account.objects.create(
            user = user,
            account_type = account_type,
            classroom = ClassRoom.objects.get(id = random.randint(11,50)),

        )
    print(f"successfully {n} accounts")

def seed_stdanswer(n):
    fake =Faker()
    for _ in range(n):
        answer = fake.text()
        StudentAnswer.objects.create(
            answer = answer,
            student = Account.objects.get(id=random.randint(11,250)),
            question = Question.objects.get(id=random.randint(11,250)),
        )
    print(f"successfully {n} stdans")



seed_exam(20)
seed_question(250)
seed_classroom(50)
seed_account(500)
seed_stdanswer(250)



